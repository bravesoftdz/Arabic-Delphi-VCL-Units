{*******************************************************}
{                                                       }
{            Arabic Delphi VCL Units                    }
{                                                       }
{ Modified by : Orwah Ali Issa (www.sy-it.com)          }
{                                                       }
{ Delphi 10.1 Berline ..  File Version 0.1  1/10/2016   }
{                                                       }
{ Get Last Version From Here :                          }
{ https://github.com/orwah/Arabic-Delphi-VCL-Units      }
{                                                       }
{*******************************************************}


{*******************************************************}
{                                                       }
{           CodeGear Delphi Runtime Library             }
{                                                       }
{ Copyright(c) 1995-2015 Embarcadero Technologies, Inc. }
{                                                       }
{*******************************************************}

unit System.RTLConsts;

interface

resourcestring
  SAncestorNotFound = 'Ancestor for ''%s'' not found';
  SAssignError = 'áÇíãßä äÓÈ  %s Åáì a %s';
  SBitsIndexError = 'Bits index out of range';
  SBucketListLocked = 'List is locked during an active ForEach';
  SCantWriteResourceStreamError = 'Can''t write to a read-only resource stream';
  SCharExpected = '''''%s'''' ãÊæŞÚÉ';
  SCheckSynchronizeError = 'CheckSynchronize called from thread $%x, which is NOT the main thread';
  SClassNotFound = 'Class %s not found';
  SDelimiterQuoteCharError = 'Delimiter and QuoteChar properties cannot have the same value';
  SDuplicateClass = 'A class named %s already exists';
  SDuplicateItem = 'ÇááÇÆÍÉ áÇÊÓãÍ ÈÇáŞíã ÇáãßÑÑÉ ($0%x)';
  SDuplicateName = 'ãßæä ÈåĞÇ ÇáÇÓã %s ãæÌæÏ ãÓÈŞÇ';
  SDuplicateString = 'ÇááÇÆÍÉ ÇáäÕíÉ áÇÊÓãÍ ÈÇáŞíã ÇáãßÑÑÉ';
  SFCreateError = 'áÇíãßä ÅäÔÇÁ Çáãáİ %s';
  SFCreateErrorEx = 'áÇíãßä ÅäÔÇÁ Çáãáİ "%s". %s';
  SFixedColTooBig = 'Fixed column count must be less than column count';
  SFixedRowTooBig = 'Fixed row count must be less than row count';
  SFOpenError = 'áÇíãßä İÊÍ Çáãáİ %s';
  SFOpenErrorEx = 'áÇíãßä İÊÍ Çáãáİ "%s". %s';
  SGridTooLarge = 'ÇáÔÈßÉ ßÈíÑÉ ÌÏÇ áåĞå ÇáÚãáíÉ';
  SIdentifierExpected = 'Identifier expected';
  SIndexOutOfRange = 'İåÑÓ ÇáÔÈßÉ ÎÇÑÌ ÇáãÌÇá ÇáãÓãæÍ';
  SIniFileWriteError = 'áÇíãßä ÇáßÊÇÈÉ Åáì %s';

  SInvalidActionCreation = 'İÔá İí ÅäÔÇÁ ÇáÍÏË';
  SInvalidActionEnumeration = 'Invalid action enumeration';
  SInvalidActionRegistration = 'Invalid action registration';
  SInvalidActionUnregistration = 'Invalid action unregistration';
  StrNoClientClass = 'The client can not be an instance of class %s';
  StrEActionNoSuported = 'ÇáÕäİ %s áÇíÏÚã åĞÇ ÇáÍÏË';

  SInvalidBinary = 'ŞíãÉ ËäÇÆíÉ ÛíÑ ÕÇáÍÉ';
  SInvalidFileName = 'ÇÓã Çáãáİ ÛíÑ ÕÇáÍ : - %s';
  SInvalidImage = 'ÊäÓíŞ ÛíÑ ÕÇáÍ';
  SInvalidMask = '''%s'' åæ ŞäÇÚ ÛíÑ ÕÇáå ãä ÃÌá (%d)';
  SInvalidName = '''''%s'''' ÇÓã ãßæä ÛíÑ ÕÇáÍ';
  SInvalidProperty = 'ŞíãÉ ÇáÎÇÕíÉ ÛíÑ ÕÇáÍÉ';
  SInvalidPropertyElement = 'ÚäÕÑ ÎÇÕíÉ ÛíÑ ÕÇáÍ: %s';
  SInvalidPropertyPath = 'ãÓÇÑ ÎÇÕíÉ ÛíÑ ÕÇáÍ';
  SInvalidPropertyType = 'äãØ ÎÇÕíÉ ÛíÑ ÕÇáÍ: %s';
  SInvalidPropertyValue = 'ŞíãÉ ÇáÎÇÕíÉ ÛíÑ ÕÇáÍÉ';
  SInvalidRegType = 'äãØ ãÚØíÇÊ ÛíÑ ÕÇáÍ ãä ÃÌá ''%s''';
  SInvalidString = 'ËÇÈÊ äÕí ÛíÑ ÕÇáÍ';
  SInvalidStringGridOp = 'áÇ íãßä ÅÖÇİÉ Ãæ ÍĞİ Õİæİ ãä ÇáÔÈßÉ';
  SItemNotFound = 'áÇíãßä ÇáÚËæÑ Úáì ÇáÚäÕÑ  ($0%x)';
  SLineTooLong = 'ÓØÑ Øæíá ÌÏÇ';
  SListCapacityError = 'ÓÚÉ ÇááÇÆÍÉ ÎÇÑÌ ÇáÍÏæÏ ÇáããßäÉ (%d)';
  SListCountError = 'ÊÚÏÇÏ ÇááÇÆÍÉ ÎÇÑÌ ÇáÍÏæÏ ÇáããßäÉ (%d)';
  SListIndexError = 'Ïáíá ÇááÇÆÍÉ ÎÇÑÌ ÇáÍÏæÏ ÇáããßäÉ (%d)';
  SMaskErr = 'ŞíãÉ ÇáÅÏÎÇá ÛíÑ ÕÍíÍÉ';
  SMaskEditErr = 'ŞíãÉ ÅÏÎÇá ÛíÑ ÕÍíÍÉ , ÇÓÊÎÏã ÒÑ ÇáÅáÛÇÁ ááÊÑÇÌÚ Úä ÇáÊÛíÑÇÊ';
  SMemoryBufferOverrun = 'Memory Buffer overrun';
  SMemoryStreamError = 'Out of memory while expanding memory stream';
  SNoComSupport = '%s has not been registered as a COM class';
  SNotPrinting = 'ÇáØÇÈÚÉ áÇÊŞæã ÈÇáØÈÇÚÉ ÍÇáíÇ';
  SNumberExpected = 'ŞíãÉ ÑŞãíÉ ãÊæŞÚÉ';
  SAnsiUTF8Expected = 'ßæÏ ANSI Ãæ UTF8 ãÊæŞÚ';
  SParseError = '%s İí ÇáÓØÑ %d';
  SComponentNameTooLong = 'Çáãßæä ''%s'' íÊæŞÚ ÍÏæÏ 64 ãÍÑİ';
  SPropertyException = 'ÎØÃ İí ŞÑÇÁÉ %s%s%s: %s';
  SPrinting = 'ÌÇÑí ÇáØÈÇÚÉ';
  SReadError = 'ÎØÃ İí ŞÑÇÁÉ ÇáãÓáß';
  SReadOnlyProperty = 'ÇáÎÇÕíÉ ááŞÑÇÁÉ İŞØ';
  SRegCreateFailed = 'İÔá ÅäÔÇÁ ÇáãİÊÇÍ %s';
  SRegGetDataFailed = 'İÔá ÇÓÊÍÕÇá ÈíÇäÇÊ ''%s''';
  SRegisterError = 'ÊÓÌíá ãßæä ÛíÑ ÕÇáÍ';
  SRegSetDataFailed = 'İÔá ÖÈØ ÈíÇäÇÊ ''%s''';
  SResNotFound = 'ÇáãæÑÏ %s áã íÊã ÇáÚËæÑ Úáíå';
  SSeekNotImplemented = '%s.Seek not implemented';
  SSortedListError = 'ÇáÚãáíÉ ÛíÑ ãÓãæÍÉ Úáì áÇÆÍÉ ãÑÊÈÉ';
  SStringExpected = 'ŞíãÉ äÕíÉ ãÊæŞÚÉ';
  SSymbolExpected = '%s ãÊæŞÚ';
  STooManyDeleted = 'Êã ÍĞİ Õİæİ Ãæ ÃÚãÏÉ ÃßËÑ ãä ÇáãÊæŞÚ';
  SUnknownGroup = '%s not in a class registration group';
  SUnknownProperty = 'ÇáÎÇÕíÉ %s ÛíÑ ãæÌæÏÉ';
  SWriteError = 'ÎØÃ ßÊÇÈÉ İí ÇáãÓáß';
  SStreamSetSize = 'ÎØÃ İí ÊÍÏíÏ ÍÌã ÇáãÓáß';
  SThreadCreateError = 'ÎØÃ İí ÅäÔÇÁ ÇáãÓáß: %s';
  SThreadError = 'ÎØÃ İí ÇáãÓáß : %s (%d)';
  SThreadExternalTerminate = 'Cannot terminate an externally created thread';
  SThreadExternalWait = 'Cannot wait for an externally created thread';
  SThreadStartError = 'Cannot call Start on a running or suspended thread';
  SThreadExternalCheckTerminated = 'Cannot call CheckTerminated on an externally created thread';
  SThreadExternalSetReturnValue = 'Cannot call SetReturnValue on an externally create thread';

  SParamIsNil = 'ÇáãÊÛíÑ %s áÇíãßä Ãä Êßæä ŞíãÊå ÎÇáíÉ nil';
  SParamIsNegative = 'ÇáãÊÛíÑ %s áÇíãßä Ãä Êßæä ŞíãÊå ÓÇáÈÉ';
  SInputBufferExceed = 'Êã ÊÌÇæÒ ŞíãÉ ÇáãÎÒä ÇáãÄŞÊ ááÅÏÎÇá Input Buffer %s = %d, %s = %d';

  SInvalidCharsInPath = 'ÇáãÓÇÑ íÍæí ãÍÇÑİ ÛíÑ ÕÇáÍÉ';
  SInvalidCharsInFileName = 'ÇÓã Çáãáİ íÍæí ãÍÇÑİ ÛíÑ ÕÇáÍÉ';
  SInvalidCharsInSearchPattern = 'ÃäãÇØ ÇáÈÍË ÊÍæí ãÍÇÑİ ÛíÑ ÕÇáÍÉ';
  SPathTooLong = 'ÇáãÓÇÑ ÇáãÍÏÏ Øæíá ÌÏÇ';
  SPathNotFound = 'ÇáãÓÇÑ ÇáãÍÏÏ ÛíÑ ãæÌæÏ';
  SPathFormatNotSupported = 'ÊäÓíŞ ÇáãÓÇÑ åĞÇ ÛíÑ ãÏÚæã';
  SDirectoryNotEmpty = 'ÇáãÌáÏ ÇáãÍÏÏ ÛíÑ İÇÑÛ';
  SDirectoryAlreadyExists = 'ÇáãÌáÏ ÇáãÍÏÏ ãæÌæÏ ãÓÈŞÇ';
  SDirectoryInvalid = 'ÇÓã ÇáãÌáÏ ÇáãÍÏÏ ÛíÑ ÕÇáÍ';
  SSourceDirIsDestDir = 'ÇáãÌáÏ ÇáåÏİ åæ äİÓ ÇáãÌáÏ ÇáãÕÏÑ';
  SSourceFileIsDestFile = 'Çáãáİ ÇáåÏİ åæ äİÓ ÇáãÌáÏ ÇáæÌåÉ';
  SPathToFileNeeded = 'ÇáãÓÇÑ íÌÈ Ãä íÍÏÏ ãáİ';
  SSameRootDrive = 'ãÓÇÑ ÇáåÏİ æÇáãÕÏÑ íÌÈ Ãä íßæäÇ İí äİÓ ÇáŞÑÕ';
  SDriveNotFound = 'ÇáŞÑÕ áÇíãßä ÇáÚËæÑ Úáíå';
  SFileNotFound = 'Çáãáİ ÇáãÍÏÏ áÇíãßä ÇáÚËæÑ Úáíå';
  SFileAlreadyExists = 'Çáãáİ ÇáãÍÏÏ ãæÌæÏ ãÓÈŞÇ';

  SInvalidDateDay = '(%d, %d) is not a valid DateDay pair';
  SInvalidDateWeek = '(%d, %d, %d) is not a valid DateWeek triplet';
  SInvalidDateMonthWeek = '(%d, %d, %d, %d) is not a valid DateMonthWeek quad';
  SInvalidDayOfWeekInMonth = '(%d, %d, %d, %d) is not a valid DayOfWeekInMonth quad';
  SInvalidJulianDate = '%f Julian cannot be represented as a DateTime';
  SMissingDateTimeField = '?';
  SMinimumDateError = 'ÇáÊæÇÑíÎ ŞÈá ÇáÓäÉ 1 ÛíÑ ãÓãæÍÉ';
  SLocalTimeInvalid = 'ÇáæŞÊ ÇáãÍáí ÇáãÚØì "%s" ÛíÑ ãÓãæÍ (ßÇÆä İí ÇáŞÊÑÉ ÇáãİŞæÏÉ ÚäÏ ÊŞÏíã ÇáÓÇÚÉ).';

  SConvIncompatibleTypes2 = 'ÃäãÇØ ÊÍæíá ÛíÑ ãßÊãáÉ [%s, %s]';
  SConvIncompatibleTypes3 = 'ÃäãÇØ ÊÍæíá ÛíÑ ãßÊãáÉ [%s, %s, %s]';
  SConvIncompatibleTypes4 = 'ÃäãÇØ ÊÍæíá ÛíÑ ãßÊãáÉ [%s - %s, %s - %s]';
  SConvUnknownType = 'äãØ ÊÍæíá ÛíÑ ãÚÑæİ %s';
  SConvDuplicateType = 'äãØ ÇáÊÍæíá (%s) ãÓÌá ãÓÈŞÇ İí %s';
  SConvUnknownFamily = 'ÚÇÆáÉ ÇáÊÍæíá ÛíÑ ãÚÑæİÉ %s';
  SConvDuplicateFamily = 'ÚÇÆáÉ ÇáÊÍæíá (%s) ãÓÌáÉ ãÓÈŞÇ';
  SConvUnknownDescription = '[$%.8x]' deprecated; // no longer used
  SConvUnknownDescriptionWithPrefix = '[%s%.8x]';
  SConvIllegalType = 'äãØ ÛíÑ ãÓãæÍ';
  SConvIllegalFamily = 'ÚÇÆáÉ ÛíÑ ãÓãæÍÉ';
  SConvFactorZero = '%s áÏíå ãÚÇãá ÕİÑí';
  SConvStrParseError = 'áÇíãßä ÊÍáíá %s';
  SFailedToCallConstructor = 'TStrings descendant %s failed to call inherited constructor';

  sWindowsSocketError = 'Windows socket error: %s (%d), on API ''%s''';
  sAsyncSocketError = 'Asynchronous socket error %d';
  sNoAddress = 'áã íÊã ÊÍÏíÏ ÚäæÇä';
  sCannotListenOnOpen = 'Can''t listen on an open socket';
  sCannotCreateSocket = 'Can''t create new socket';
  sSocketAlreadyOpen = 'Socket already open';
  sCantChangeWhileActive = 'Can''t change value while socket is active';
  sSocketMustBeBlocking = 'Socket must be in blocking mode';
  sSocketIOError = '%s ÎØÃ %d, %s';
  sSocketRead = 'ŞÑÇÁÉ';
  sSocketWrite = 'ßÊÇÈÉ';

  SCmplxCouldNotParseImaginary = 'áÇíãßä ÊÍáíá ÇáŞÓã ÇáÊÎíáí';
  SCmplxCouldNotParseSymbol = 'áÇíãßä ÊÍáíá ÇáÑãÒ ÇáãØáæÈ ''%s'' ';
  SCmplxCouldNotParsePlus = 'áÇíãßä ÊÍáíá ÇáÑãÒ ÇáãØáæÈ  ''+'' (Ãæ ''-'') ';
  SCmplxCouldNotParseReal = 'áÇíãßä ÊÍáíá ÇáŞÓã ÇáÍŞíŞí';
  SCmplxUnexpectedEOS = 'äåÇíÉ ÇáÓáÓáÉ ÇáäÕíÉ ÛíÑ ãÊæŞÚå [%s]';
  SCmplxUnexpectedChars = 'ãÍÇÑİ ÛíÑ ãÊæŞÚÉ';
  SCmplxErrorSuffix = '%s [%s<?>%s]';

  hNoSystem = 'áã íÊã ÊäÕíÈ ãÏíÑ ãáİÇÊ ÇáãÓÇÚÏÉ.';
  hNoTopics = 'áã íÊã ÊäÕíÈ ãÓÇÚÏÉ ÈäÇÁ Úáì ÇáãæÇÖíÚ.';
  hNoContext = 'áã íÊã ÊäÕíÈ ãÓÇÚÏÉ ÍÓÇÓÉ ááÓíÇŞ.';
  hNoContextFound = 'áã íÊã ÇáÚËæÑ Úáì ãÓÇÚÏÉ ááÓíÇŞ %d.';
  hNothingFound = 'áã íÊã ÇáÚËæÑ Úáì ãÓÇÚÏÉ áÜ "%s"';
  hNoTableOfContents = 'áã íÊã ÇáÚËæÑ Úáì ÌÏæá ÇáãÍÊæíÇÊ.';
  hNoFilterViewer = 'áÇíæÌÏ ãÓÊÚÑÖ ãÓÇÚÏÉ íÏÚã ÇáİáÊÑÉ';

  sArgumentInvalid = 'ãÚÇãá ÛíÑ ÕÇáÍ';
  sArgumentOutOfRange_InvalidHighSurrogate = 'A valid high surrogate character is >= $D800 and <= $DBFF';
  sArgumentOutOfRange_InvalidLowSurrogate = 'A valid low surrogate character is >= $DC00 and <= $DFFF';
  sArgumentOutOfRange_Index = 'ÇáİåÑÓ ÎÇÑÌ ÇáÍÏæÏ (%d).  íÌÈ Çä íßæä >= 0 æ < %d';
  sArgumentOutOfRange_StringIndex = 'ÇáİåÑÓ ÇáäÕí ÎÇÑÌ ÇáÍÏæÏ (%d).  íÌÈ Ãä íßæä >= %d æ <= %d';
  sArgumentOutOfRange_InvalidUTF32 = 'Invalid UTF32 character value.  Must be >= 0 and <= $10FFFF, excluding surrogate pair ranges';
  sArgument_InvalidHighSurrogate = 'High surrogate char without a following low surrogate char at index: %d. Check that the string is encoded properly';
  sArgument_InvalidLowSurrogate = 'Low surrogate char without a preceding high surrogate char at index: %d. Check that the string is encoded properly';
  sArgumentOutOfRange_NeedNonNegValue = 'ÇáãÚÇãá, %s, íÌÈ Çä íßæä >= 0';
  sArgumentOutOfRange_OffLenInvalid = 'ÇáÅÒÇÍÉ æÇáØæá ÛíÑ ãÓãæÍÉ ááãÕİæİÉ ÇáãÚØÇÉ';

  sInvalidStringAndObjectArrays = 'Length of Strings and Objects arrays must be equal';

  sSameArrays = 'Source and Destination arrays must not be the same';

  sNoConstruct = 'ÇáÕäİ %s áÇíÈÏæ Ãäå Êã ÊÔííÏå';

  sCannotCallAcquireOnConditionVar = 'Cannot call Acquire on TConditionVariable.  Must call WaitFor with an external TMutex';
  sInvalidTimeoutValue = 'Invalid Timeout value: %s';
  sNamedSyncObjectsNotSupported = 'Named synchronization objects not supported on this platform';

  sInvalidInitialSemaphoreCount = 'Invalid InitialCount: %d';
  sInvalidMaxSemaphoreCount = 'Invalid MaxCount: %d';
  sSemaphoreCanceled = 'Invalid operation. Semaphore canceled';
  sInvalidSemaphoreReleaseCount = 'Invalid semaphore release count: %d';
  sSemaphoreReachedMaxCount = 'Semaphore reached MaxCount';
  sErrorCreatingSemaphore = 'Error Creating Semaphore';

  sErrorCreatingEvent = 'ÎØÃ İí ÅäÔÇÁ ÇáÍÏË';

  sSpinCountOutOfRange = 'SpinCount out of range. Must be between 0 and %d';

  sCountdownEventCanceled = 'Countdown canceled';
  sInvalidResetCount = 'Invalid Reset Count: %d';
  sInvalidInitialCount = 'Invalid Count: %d';
  sInvalidDecrementCount = 'Invalid Decrement Count: %d';
  sInvalidIncrementCount = 'Invalid Increment Count: %d';
  sInvalidDecrementOperation = 'Decrement amount will cause invalid results: Count: %d, CurCount: %d';
  sInvalidIncrementOperation = 'Count already max: Amount: %d, CurCount: %d';
  sCountdownAlreadyZero = 'Countdown already reached zero (0)';

  sTimespanTooLong = 'Timespan too long';
  sInvalidTimespanDuration = 'The duration cannot be returned because the absolute value exceeds the value of TTimeSpan.MaxValue';
  sTimespanValueCannotBeNan = 'Value cannot be NaN';
  sCannotNegateTimespan = 'Negating the minimum value of a Timespan is invalid';
  sInvalidTimespanFormat = 'Invalid Timespan format';
  sTimespanElementTooLong = 'Timespan element too long';

  { ************************************************************************* }
  { Distance's family type }
  SDistanceDescription = 'ÇáãÓÇİÉ';

  { Distance's various conversion types }
  SMicromicronsDescription = 'ãíßÑæ ãíßÑæä';
  SAngstromsDescription = 'ÃäÌÓÊÑæã';
  SMillimicronsDescription = 'ãíáí ãíßÑæä';
  SMicronsDescription = 'ãíßÑæä';
  SMillimetersDescription = 'ãíáíãÊÑ';
  SCentimetersDescription = 'ÓäÊíãÊÑ';
  SDecimetersDescription = 'ÏíÓíãÊÑ';
  SMetersDescription = 'ãÊÑ';
  SDecametersDescription = 'ÏíßÇãÊÑ(10ã)';
  SHectometersDescription = 'åíßÊæãÊÑ(100ã)';
  SKilometersDescription = 'ßíáæãÊÑ';
  SMegametersDescription = 'ãíÛÇãÊÑ';
  SGigametersDescription = 'ÛíÛÇãÊÑ';
  SInchesDescription = 'ÅäÔ';
  SFeetDescription = 'ŞÏã';
  SYardsDescription = 'íÇÑÏ';
  SMilesDescription = 'ãíá';
  SNauticalMilesDescription = 'NauticalMiles';
  SAstronomicalUnitsDescription = 'AstronomicalUnits';
  SLightYearsDescription = 'ÓäÉ ÖæÆíÉ';
  SParsecsDescription = 'İÑÓÎ äÌãí';
  SCubitsDescription = 'ĞÑÇÚ';
  SFathomsDescription = 'ŞÇãÉ';
  SFurlongsDescription = 'İÑáäÛ';
  SHandsDescription = 'ĞÑÇÚ';
  SPacesDescription = 'ÎØæÉ';
  SRodsDescription = 'ŞÖíÈ';
  SChainsDescription = 'ÓáÓáÉ';
  SLinksDescription = 'ÇÑÊÈÇØ';
  SPicasDescription = 'Picas';
  SPointsDescription = 'äŞØÉ';

  { ************************************************************************* }
  { Area's family type }
  SAreaDescription = 'ÇáãÓÇÍÉ';

  { Area's various conversion types }
  SSquareMillimetersDescription = 'ãáíãÊÑ ãÑÈÚ';
  SSquareCentimetersDescription = 'ÓäÊíãÊÑ ãÑÈÚ';
  SSquareDecimetersDescription = 'ÏíÓíãÊÑ ãÑÈÚ';
  SSquareMetersDescription = 'ãÊÑ ãÑÈÚ';
  SSquareDecametersDescription = 'SquareDecameters';
  SSquareHectometersDescription = 'SquareHectometers';
  SSquareKilometersDescription = 'ßíáæãÊÑ ãÑÈÚ';
  SSquareInchesDescription = 'ÅäÔ ãÑÈÚ';
  SSquareFeetDescription = 'SquareFeet';
  SSquareYardsDescription = 'SquareYards';
  SSquareMilesDescription = 'SquareMiles';
  SAcresDescription = 'İÏÇä';
  SCentaresDescription = 'Centares';
  SAresDescription = 'Ares';
  SHectaresDescription = 'åßÊÇÑ';
  SSquareRodsDescription = 'SquareRods';

  { ************************************************************************* }
  { Volume's family type }
  SVolumeDescription = 'ÇáÍÌæã';

  { Volume's various conversion types }
  SCubicMillimetersDescription = 'ãíáíãÊÑ ãßÚÈ';
  SCubicCentimetersDescription = 'ÓäÊíãÊÑ ãßÚÈ';
  SCubicDecimetersDescription = 'ÏíÓíãÊÑ ãßÚÈ';
  SCubicMetersDescription = 'ãÊÑ ãßÚÈ';
  SCubicDecametersDescription = 'CubicDecameters';
  SCubicHectometersDescription = 'CubicHectometers';
  SCubicKilometersDescription = 'ßíáæãÊÑ ãßÚÈ';
  SCubicInchesDescription = 'ÅäÔ ãßÚÈ';
  SCubicFeetDescription = 'CubicFeet';
  SCubicYardsDescription = 'CubicYards';
  SCubicMilesDescription = 'CubicMiles';
  SMilliLitersDescription = 'MilliLiters';
  SCentiLitersDescription = 'CentiLiters';
  SDeciLitersDescription = 'DeciLiters';
  SLitersDescription = 'Liters';
  SDecaLitersDescription = 'DecaLiters';
  SHectoLitersDescription = 'HectoLiters';
  SKiloLitersDescription = 'KiloLiters';
  SAcreFeetDescription = 'AcreFeet';
  SAcreInchesDescription = 'AcreInches';
  SCordsDescription = 'Cords';
  SCordFeetDescription = 'CordFeet';
  SDecisteresDescription = 'Decisteres';
  SSteresDescription = 'Steres';
  SDecasteresDescription = 'Decasteres';

  { American Fluid Units }
  SFluidGallonsDescription = 'FluidGallons';
  SFluidQuartsDescription = 'FluidQuarts';
  SFluidPintsDescription = 'FluidPints';
  SFluidCupsDescription = 'FluidCups';
  SFluidGillsDescription = 'FluidGills';
  SFluidOuncesDescription = 'FluidOunces';
  SFluidTablespoonsDescription = 'FluidTablespoons';
  SFluidTeaspoonsDescription = 'FluidTeaspoons';

  { American Dry Units }
  SDryGallonsDescription = 'DryGallons';
  SDryQuartsDescription = 'DryQuarts';
  SDryPintsDescription = 'DryPints';
  SDryPecksDescription = 'DryPecks';
  SDryBucketsDescription = 'DryBuckets';
  SDryBushelsDescription = 'DryBushels';

  { English Imperial Fluid/Dry Units }
  SUKGallonsDescription = 'UKGallons';
  SUKPottlesDescription = 'UKPottle';
  SUKQuartsDescription = 'UKQuarts';
  SUKPintsDescription = 'UKPints';
  SUKGillsDescription = 'UKGill';
  SUKOuncesDescription = 'UKOunces';
  SUKPecksDescription = 'UKPecks';
  SUKBucketsDescription = 'UKBuckets';
  SUKBushelsDescription = 'UKBushels';

  { ************************************************************************* }
  { Mass's family type }
  SMassDescription = 'ÇáÃæÒÇä';

  { Mass's various conversion types }
  SNanogramsDescription = 'äÇäæ ÛÑÇã';
  SMicrogramsDescription = 'ãíßÑæ ÛÑÇã';
  SMilligramsDescription = 'ãíáí ÛÑÇã';
  SCentigramsDescription = 'ÓäÊíÛÑÇã';
  SDecigramsDescription = 'ÏíÓíÛÑÇã';
  SGramsDescription = 'ÛÑÇã';
  SDecagramsDescription = 'ÏíßÇ ÛÑÇã';
  SHectogramsDescription = 'åíßÊæÛÑÇã';
  SKilogramsDescription = 'ßíáæÛÑÇã';
  SMetricTonsDescription = 'Øä ãÊÑí';
  SDramsDescription = 'Drams';
  SGrainsDescription = 'Grains';
  STonsDescription = 'Øä';
  SLongTonsDescription = 'LongTons';
  SOuncesDescription = 'Ounces';
  SPoundsDescription = 'Pounds';
  SStonesDescription = 'Stones';

  { ************************************************************************* }
  { Temperature's family type }
  STemperatureDescription = 'ÇáÍÑÇÑÉ';

  { Temperature's various conversion types }
  SCelsiusDescription = 'ÓíáÓíæÓ';
  SKelvinDescription = 'ßíáİä';
  SFahrenheitDescription = 'İÇåÑäåÇíÊ';
  SRankineDescription = 'ÑÇäßíä';
  SReaumurDescription = 'ÑíÇãæÑ';

  { ************************************************************************* }
  { Time's family type }
  STimeDescription = 'ÇáæŞÊ';

  { Time's various conversion types }
  SMilliSecondsDescription = 'ãíáí ËÇäíÉ';
  SSecondsDescription = 'ËÇäíÉ';
  SMinutesDescription = 'ÏŞíŞÉ';
  SHoursDescription = 'ÓÇÚÉ';
  SDaysDescription = 'íæã';
  SWeeksDescription = 'ÃÓÈæÚ';
  SFortnightsDescription = 'ÃÓÈæÚÇä';
  SMonthsDescription = 'ÔåÑ';
  SYearsDescription = 'ÓäÉ';
  SDecadesDescription = 'ÚŞÏ';
  SCenturiesDescription = 'ŞÑä';
  SMillenniaDescription = 'ÃáİíÉ';
  SDateTimeDescription = 'ÊÇÑíÎ ææŞÊ';
  SJulianDateDescription = 'ÇáÊŞæíã ÇáíæáíæÓí';
  SModifiedJulianDateDescription = 'ÇáÊŞæíã ÇáíæáíæÓí ÇáãÚÏá';

  SInvalidDate = '''''%s'''' is not a valid date' deprecated 'Use SysConst.SInvalidDate';
  SInvalidDateTime = '''''%s'''' is not a valid date and time' deprecated 'Use SysConst.SInvalidDateTime';
  SInvalidInteger = '''''%s'''' is not a valid integer value' deprecated 'Use SysConst.SInvalidInteger';
  SInvalidTime = '''''%s'''' is not a valid time' deprecated 'Use SysConst.SInvalidTime';
  STimeEncodeError = 'Invalid argument to time encode' deprecated 'Use SysConst.STimeEncodeError';

  SGUIDAlreadyDefined = 'GUID ''%s'' was previously registered';
  SNoComComponent = 'Constructing COM object ''%s'' for which there is no wrapper component';
  SNoComClass = '%s.GetComClass returned nil';
  SNoCOMClassSpecified = 'No ComClass specified';
  SNoCOMClassesRegistered = 'No COM classes have been registered';

  SNoContext = 'No context-sensitive help installed';
  SNoContextFound = 'No help found for context %d';
  SNoIndex = 'Unable to open Index';
  SNoSearch = 'Unable to open Search';
  SNoTableOfContents = 'Unable to find a Table of Contents';
  SNoTopics = 'No topic-based help system installed';
  SNothingFound = 'No help found for %s';

  SMethodNotFound = 'Method %s of class %s not found';
  STypeMisMatch = 'Type mismatch in parameter %d for method %s';
  SInvalidDispID = 'Invalid DispID for parameter %d in method %s';
  SParamRequired = 'Parameter %d required for method %s';
  SMethodOver = 'Method definition for %s has over %d parameters';
  STooManyParams = 'Too many parameters for method %s';
  SNoRTTIInfoType = 'Unable to invoke method %s that use unpublished type';
  SResultIsExtended = '10bytes-Extended type in method %s'' return type is not supported';
  SParamIsExtended = '10bytes-Extended type in parameter %d in method %s is not supported';

  SArgumentOutOfRange = 'ÇáãÊÛíÑ ÎÇÑÌ ÇáãÏì ÇáãÓãæÍ';
  SArgumentNil = 'ÇáãÊÛíÑ íÌÈ Ãä áÇíßæä ÎÇáí Nil';
  SErrorCantModifyWhileIterating = 'Cannot modify a collection while iterating';
  SUnbalancedOperation = 'Unbalanced stack or queue operation';
  SGenericItemNotFound = 'ÇáÚäÕÑ ÛíÑ ãæÌæÏ';
  SGenericDuplicateItem = 'ÇáŞíã ÇáãßÑÑÉ ÛíÑ ãÓãæÍÉ';

  SSpinLockInvalidOperation = 'Thread tracking isn''t enabled';
  SSpinLockReEntered = 'SpinLock has been re-entered on the same thread';
  SSpinLockNotOwned = 'SpinLock not owned by the current thread';

  SInsufficientRtti = 'Insufficient RTTI available to support this operation';
  SParameterCountMismatch = 'ÚÏÏ ÇáãÊÛíÑÇÊ ÛíÑ ãØÇÈŞ';
  SParameterCountExceeded = 'Êã ÊÎØí ÚÏÏ ÇáãÊÛíÑÇÊ';
  SConversionError = 'äãØ ÛíÑ ãÊæÇİŞ';
  SNonPublicType = 'Type ''%s'' is not declared in the interface section of a unit';
  SByRefArgMismatch = 'VAR and OUT arguments must match parameter type exactly';

  SInsufficientReadBuffer = 'Insufficient buffer for requested data';

  SInvalid7BitEncodedInteger = 'Invalid 7 bit integer stream encoding';
  SNoSurrogates = 'Surrogates not allowed as a single char';
  SInvalidStringLength = 'Invalid string length';
  SReadPastEndOfStream = 'Attempt to read past end of stream';

  SInvalidGuidArray = 'Byte array for GUID must be exactly %d bytes long';

  SServiceNotFound = 'Specified Login Credential Service not found';

  { Class group report strings }

  sClassGroupHeader = 'Group[%d] - Active: %s';
  sGroupClassesHeader = '  Group Classes';
  sClassListHeader = '  Classes';
  sClassAliasesHeader = '  Class Aliases';

{$IFDEF MACOS}
  sInvalidConversion = 'Invalid conversion from %s to %s';
  sInvalidPListType = 'Invalid CFPropertyList type';
  sConvertArrayArray = 'Cannot convert CFArray of CFArray';
  sConvertArrayDictionary = 'Cannot convert CFArray of CFDictionary';
  sConvertDictionary = 'Cannot translate CFDictionary to Delphi type';
  sKeyNotPresent = 'Key not present';
  SFailedClassCreate = 'Unable to create class ''%s''';
  SObjCSelectorNotFound = 'Selector ''%s'' not found';
  SObjCClassRegistrationFailed = 'Unable to register class ''%s''';
  SInvalidObjCType = 'The type ''%s'' is not supported with ObjectiveC interoperability';
  SFatalInvoke = 'Fatal error during function invocation';
{$ENDIF MACOS}

{$IFDEF MSWINDOWS}
  { TOSVersion strings }
  SVersionStr = '%s (ÇáÅÕÏÇÑÉ %d.%d, ÇáÈäÇÁ %d, %5:s)';
  SSPVersionStr = '%s ÍÒãÉ ÇáÎÏãÉ %4:d (ÇáÅÕÏÇÑÉ %1:d.%2:d, ÇáÈäÇÁ %3:d, %5:s)';
  SVersion32 = 'ÅÕÏÇÑ 32 ÈÊ';
  SVersion64 = 'ÅÕÏÇÑ 64 ÈÊ';
  SWindows = 'æíäÏæÒ';
  SWindowsVista = 'æíäÏæÒ İíÓÊÇ';
  SWindowsServer2008 = 'Windows Server 2008';
  SWindows7 = 'æíäÏæÒ 7';
  SWindowsServer2008R2 = 'Windows Server 2008 R2';
  SWindows2000 = 'Windows 2000';
  SWindowsXP = 'æíäÏæÒ ÅßÓ Èí';
  SWindowsServer2003 = 'Windows Server 2003';
  SWindowsServer2003R2 = 'Windows Server 2003 R2';
  SWindowsServer2012 = 'Windows Server 2012';
  SWindowsServer2012R2 = 'Windows Server 2012 R2';
  SWindows8 = 'æíäÏæÒ 8';
  SWindows8Point1 = 'æíäÏæÒ 8.1';
  SWindows10 = 'æíäÏæÒ 10';
  SItaskbarInterfaceException = '%s interface is not supported on this OS version';
  SHookException = 'Could not hook messages, buttons and preview events will not work';
  SInitializeException = 'Could not initialize taskbar. Error: %d';
  SInstanceException = 'There is another taskbar control instance';
  SButtonsLimitException = 'Windows taskbar only supports %d buttons on preview tabs';
  SCouldNotRegisterTabException = 'Could not register tab. Error %d';
  SInvalidProgressValueException = '%d is incorrect. Should be between 0 and %d';
  SThumbPreviewException = 'Failed to set bitmap as thumbnail preview. Error: %d';
  SBitmapPreviewException = 'Failed to set bitmap as preview. Error: %d';
  { WinRT support strings }
  SWinRTNoRTTI = 'No RTTI information found for class %s';
  SWinRTInstanceError = 'Cannot create instance of class %s';
  SWinRTICreatedError = 'The created instance of class %s is wrong';
  SWinRTHStringError = 'Error creating HString for %s';
  SWinRTFactoryError = 'Cannot get factory for class %s';
  SWinRTWrongFactoryError = 'The factory obtained for %s is wrong';
  SWinRTInteropError = 'Cannot create interop class';
{$ENDIF}
{$IF defined(MACOS) or defined(ANDROID)}
  SVersionStr = '%s (Version %d.%d.%d)';
{$ENDIF}
  { Zip Strings}
  SZipErrorRead            = 'Error reading zip file';
  SZipErrorWrite           = 'Error writing zip file';
  SZipInvalidLocalHeader   = 'Invalid Zip Local Header signature';
  SZipInvalidCentralHeader = 'Invalid Zip Central Header signature';
  SZipNotSupported         = 'Support for compression method not registered: %s';
  SZipNotOpen              = 'File must be open';
  SZipNoWrite              = 'File must be open for writing';
  SZipNoRead               = 'File must be open for reading';
  SZipNotEmpty             = 'Zip file must be empty';
  SZipFileNameEmpty        = 'File name must not be empty';

  sObserverUnsupported = 'Observer is not supported';
  sObserverMultipleSingleCast = 'Cannot have multiple single cast observers added to the observers collection';
  sObserverNoInterface = 'The object does not implement the observer interface';
  sObserverNoSinglecastFound = 'No single cast observer with ID %d was added to the observer collection';
  sObserverNoMulticastFound = 'No multi cast observer with ID %d was added to the observer collection';
  sObserverNotAvailable = 'Observer is not available';

  SGeocodeMultipleRequests = 'Cannot initiate two or more geocoding requests at the same time';
  SLocationSensorStarted = 'The location sensor is started';
  SSensorIndexError = 'The sensor on the specified index (%d) is not found';
                                                          
{IFDEF MACOS}
  SLocationServiceUnauthorized = 'Unauthorized to use location services';
  SLocationServiceDisabled = 'Location services are disabled';
{ENDIF}

  {$IFDEF ANDROID}
  SAssetFileNotFound = 'Cannot deploy, "%s" file not found in assets';
  SExternalExtorageNotAvailable = 'Cannot have access to external storage on device';
  {$ENDIF}

  { System.DateUtils }
  SInvalidDateString = 'äÕ ÇáÊÇÑíÎ ÛíÑ ãŞÈæá: %s';
  SInvalidTimeString = 'äÕ ÇáæŞÊ ÛíÑ ãŞÈæá: %s';
  SInvalidOffsetString = 'äÕ ÅÒÇÍÉ ÇáæŞÊ ÛíÑ ãÓãæÍÉ: %s';

  { System.Devices }
  sCannotManuallyConstructDevice = 'Manual construction of TDeviceInfo is not supported'; // move to System.RTLConsts.
  sAttributeExists = 'Attribute ''%s'' already exists';
  sDeviceExists = 'Device ''%s'' already exists';

  { System.Hash }
  SHashCanNotUpdateMD5 = 'MD5: Cannot update a finalized hash';
  SHashCanNotUpdateSHA1 = 'SHA1: Cannot update a finalized hash';
  SHashCanNotUpdateSHA2 = 'SHA2: Cannot update a finalized hash';

  { System.NetEncoding }
  sErrorDecodingURLText = 'Error decoding URL style (%%XX) encoded string at position %d';
  sInvalidURLEncodedChar = 'Invalid URL encoded character (%s) at position %d';
  sInvalidHTMLEncodedChar = 'Invalid HTML encoded character (%s) at position %d';

  { System.Threading }
  sStopAfterBreak = 'The Break method was previously called. Break and Stop may not be used in combination in iterations of the same loop';
  sBreakAfterStop = 'The Stop method was previously called. Break and Stop may not be used in combination in iterations of the same loop';
  sInvalidTaskConstruction = 'Cannot construct an ITask in this manner';
  sEmptyJoinTaskList = 'List of tasks to Join method empty';
  sWaitNilTask = 'At least one task in array nil';
  sCannotStartCompletedTask = 'Cannot start a task that has already completed';
  sOneOrMoreTasksCancelled = 'One or more tasks were cancelled';
  sDefaultAggregateExceptionMsg = 'One or more errors occurred';

  { System.Types }
  sMustWaitOnOneEvent = 'Must wait on at least one event';

  { TComponent.BeginInvoke }
  sBeginInvokeDestroying = 'Cannot call BeginInvoke on a TComponent in the process of destruction';

  { System.ShareContract }
  SShareContractNotAvailable = 'ShareContract not available';
  SShareContractNotSupported = 'Sharing not supported under %s';
  SShareContractNotInitialized = 'TShareContract.OnProcessMessages event must be assigned first';


const
  SEmpty: string = 'Empty';  // do not localize
  SMenuSeparator: string = '-';   // do not localize

implementation

end.
